// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as upstash from "@pulumi/upstash";
 *
 * const kafkaCredentialData = upstash.getKafkaCredential({
 *     credentialId: upstash_kafka_credential.exampleKafkaCredential.credential_id,
 * });
 * ```
 */
export function getKafkaCredential(args: GetKafkaCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaCredentialResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("upstash:index/getKafkaCredential:getKafkaCredential", {
        "credentialId": args.credentialId,
    }, opts);
}

/**
 * A collection of arguments for invoking getKafkaCredential.
 */
export interface GetKafkaCredentialArgs {
    credentialId: string;
}

/**
 * A collection of values returned by getKafkaCredential.
 */
export interface GetKafkaCredentialResult {
    readonly clusterId: string;
    readonly creationTime: number;
    readonly credentialId: string;
    readonly credentialName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly password: string;
    readonly permissions: string;
    readonly state: string;
    readonly topic: string;
    readonly username: string;
}

export function getKafkaCredentialOutput(args: GetKafkaCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaCredentialResult> {
    return pulumi.output(args).apply(a => getKafkaCredential(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaCredential.
 */
export interface GetKafkaCredentialOutputArgs {
    credentialId: pulumi.Input<string>;
}
