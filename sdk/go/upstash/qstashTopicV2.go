// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upstash

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type QStashTopicV2 struct {
	pulumi.CustomResourceState

	// Creation time for Qstash Topic.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Endpoints for the Qstash Topic
	Endpoints pulumi.StringArrayOutput `pulumi:"endpoints"`
	// Name of the Qstash Topic
	Name pulumi.StringOutput `pulumi:"name"`
	// Last Update time for Qstash Topic.
	UpdatedAt pulumi.IntOutput `pulumi:"updatedAt"`
}

// NewQStashTopicV2 registers a new resource with the given unique name, arguments, and options.
func NewQStashTopicV2(ctx *pulumi.Context,
	name string, args *QStashTopicV2Args, opts ...pulumi.ResourceOption) (*QStashTopicV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoints == nil {
		return nil, errors.New("invalid value for required argument 'Endpoints'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource QStashTopicV2
	err := ctx.RegisterResource("upstash:index/qStashTopicV2:QStashTopicV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQStashTopicV2 gets an existing QStashTopicV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQStashTopicV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QStashTopicV2State, opts ...pulumi.ResourceOption) (*QStashTopicV2, error) {
	var resource QStashTopicV2
	err := ctx.ReadResource("upstash:index/qStashTopicV2:QStashTopicV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QStashTopicV2 resources.
type qstashTopicV2State struct {
	// Creation time for Qstash Topic.
	CreatedAt *int `pulumi:"createdAt"`
	// Endpoints for the Qstash Topic
	Endpoints []string `pulumi:"endpoints"`
	// Name of the Qstash Topic
	Name *string `pulumi:"name"`
	// Last Update time for Qstash Topic.
	UpdatedAt *int `pulumi:"updatedAt"`
}

type QStashTopicV2State struct {
	// Creation time for Qstash Topic.
	CreatedAt pulumi.IntPtrInput
	// Endpoints for the Qstash Topic
	Endpoints pulumi.StringArrayInput
	// Name of the Qstash Topic
	Name pulumi.StringPtrInput
	// Last Update time for Qstash Topic.
	UpdatedAt pulumi.IntPtrInput
}

func (QStashTopicV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*qstashTopicV2State)(nil)).Elem()
}

type qstashTopicV2Args struct {
	// Endpoints for the Qstash Topic
	Endpoints []string `pulumi:"endpoints"`
	// Name of the Qstash Topic
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a QStashTopicV2 resource.
type QStashTopicV2Args struct {
	// Endpoints for the Qstash Topic
	Endpoints pulumi.StringArrayInput
	// Name of the Qstash Topic
	Name pulumi.StringPtrInput
}

func (QStashTopicV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*qstashTopicV2Args)(nil)).Elem()
}

type QStashTopicV2Input interface {
	pulumi.Input

	ToQStashTopicV2Output() QStashTopicV2Output
	ToQStashTopicV2OutputWithContext(ctx context.Context) QStashTopicV2Output
}

func (*QStashTopicV2) ElementType() reflect.Type {
	return reflect.TypeOf((**QStashTopicV2)(nil)).Elem()
}

func (i *QStashTopicV2) ToQStashTopicV2Output() QStashTopicV2Output {
	return i.ToQStashTopicV2OutputWithContext(context.Background())
}

func (i *QStashTopicV2) ToQStashTopicV2OutputWithContext(ctx context.Context) QStashTopicV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(QStashTopicV2Output)
}

// QStashTopicV2ArrayInput is an input type that accepts QStashTopicV2Array and QStashTopicV2ArrayOutput values.
// You can construct a concrete instance of `QStashTopicV2ArrayInput` via:
//
//	QStashTopicV2Array{ QStashTopicV2Args{...} }
type QStashTopicV2ArrayInput interface {
	pulumi.Input

	ToQStashTopicV2ArrayOutput() QStashTopicV2ArrayOutput
	ToQStashTopicV2ArrayOutputWithContext(context.Context) QStashTopicV2ArrayOutput
}

type QStashTopicV2Array []QStashTopicV2Input

func (QStashTopicV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QStashTopicV2)(nil)).Elem()
}

func (i QStashTopicV2Array) ToQStashTopicV2ArrayOutput() QStashTopicV2ArrayOutput {
	return i.ToQStashTopicV2ArrayOutputWithContext(context.Background())
}

func (i QStashTopicV2Array) ToQStashTopicV2ArrayOutputWithContext(ctx context.Context) QStashTopicV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QStashTopicV2ArrayOutput)
}

// QStashTopicV2MapInput is an input type that accepts QStashTopicV2Map and QStashTopicV2MapOutput values.
// You can construct a concrete instance of `QStashTopicV2MapInput` via:
//
//	QStashTopicV2Map{ "key": QStashTopicV2Args{...} }
type QStashTopicV2MapInput interface {
	pulumi.Input

	ToQStashTopicV2MapOutput() QStashTopicV2MapOutput
	ToQStashTopicV2MapOutputWithContext(context.Context) QStashTopicV2MapOutput
}

type QStashTopicV2Map map[string]QStashTopicV2Input

func (QStashTopicV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QStashTopicV2)(nil)).Elem()
}

func (i QStashTopicV2Map) ToQStashTopicV2MapOutput() QStashTopicV2MapOutput {
	return i.ToQStashTopicV2MapOutputWithContext(context.Background())
}

func (i QStashTopicV2Map) ToQStashTopicV2MapOutputWithContext(ctx context.Context) QStashTopicV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QStashTopicV2MapOutput)
}

type QStashTopicV2Output struct{ *pulumi.OutputState }

func (QStashTopicV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**QStashTopicV2)(nil)).Elem()
}

func (o QStashTopicV2Output) ToQStashTopicV2Output() QStashTopicV2Output {
	return o
}

func (o QStashTopicV2Output) ToQStashTopicV2OutputWithContext(ctx context.Context) QStashTopicV2Output {
	return o
}

// Creation time for Qstash Topic.
func (o QStashTopicV2Output) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *QStashTopicV2) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Endpoints for the Qstash Topic
func (o QStashTopicV2Output) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *QStashTopicV2) pulumi.StringArrayOutput { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Name of the Qstash Topic
func (o QStashTopicV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *QStashTopicV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Last Update time for Qstash Topic.
func (o QStashTopicV2Output) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *QStashTopicV2) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

type QStashTopicV2ArrayOutput struct{ *pulumi.OutputState }

func (QStashTopicV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QStashTopicV2)(nil)).Elem()
}

func (o QStashTopicV2ArrayOutput) ToQStashTopicV2ArrayOutput() QStashTopicV2ArrayOutput {
	return o
}

func (o QStashTopicV2ArrayOutput) ToQStashTopicV2ArrayOutputWithContext(ctx context.Context) QStashTopicV2ArrayOutput {
	return o
}

func (o QStashTopicV2ArrayOutput) Index(i pulumi.IntInput) QStashTopicV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QStashTopicV2 {
		return vs[0].([]*QStashTopicV2)[vs[1].(int)]
	}).(QStashTopicV2Output)
}

type QStashTopicV2MapOutput struct{ *pulumi.OutputState }

func (QStashTopicV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QStashTopicV2)(nil)).Elem()
}

func (o QStashTopicV2MapOutput) ToQStashTopicV2MapOutput() QStashTopicV2MapOutput {
	return o
}

func (o QStashTopicV2MapOutput) ToQStashTopicV2MapOutputWithContext(ctx context.Context) QStashTopicV2MapOutput {
	return o
}

func (o QStashTopicV2MapOutput) MapIndex(k pulumi.StringInput) QStashTopicV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QStashTopicV2 {
		return vs[0].(map[string]*QStashTopicV2)[vs[1].(string)]
	}).(QStashTopicV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QStashTopicV2Input)(nil)).Elem(), &QStashTopicV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*QStashTopicV2ArrayInput)(nil)).Elem(), QStashTopicV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*QStashTopicV2MapInput)(nil)).Elem(), QStashTopicV2Map{})
	pulumi.RegisterOutputType(QStashTopicV2Output{})
	pulumi.RegisterOutputType(QStashTopicV2ArrayOutput{})
	pulumi.RegisterOutputType(QStashTopicV2MapOutput{})
}
