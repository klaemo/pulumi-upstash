// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upstash

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type QStashScheduleV2 struct {
	pulumi.CustomResourceState

	// Body to send for the POST request in string format. Needs escaping (\) double quotes.
	Body pulumi.StringPtrOutput `pulumi:"body"`
	// Callback URL for Qstash Schedule.
	Callback pulumi.StringPtrOutput `pulumi:"callback"`
	// Content type for Qstash Scheduling.
	ContentType pulumi.StringPtrOutput `pulumi:"contentType"`
	// Creation time for Qstash Schedule.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Cron string for Qstash Schedule
	Cron pulumi.StringOutput `pulumi:"cron"`
	// Delay for Qstash Schedule. Delay should be given in seconds
	Delay pulumi.StringPtrOutput `pulumi:"delay"`
	// Destination for Qstash Schedule. Either Topic Name or valid URL
	Destination pulumi.StringOutput `pulumi:"destination"`
	// Forward headers to your API
	ForwardHeaders pulumi.StringMapOutput `pulumi:"forwardHeaders"`
	// Headers for the QStash schedule
	Header pulumi.StringOutput `pulumi:"header"`
	// Method of Http Request on QStash
	Method pulumi.StringPtrOutput `pulumi:"method"`
	// Retries for Qstash Schedule requests.
	Retries pulumi.IntPtrOutput `pulumi:"retries"`
	// Unique Qstash Schedule ID for requested schedule
	ScheduleId pulumi.StringOutput `pulumi:"scheduleId"`
}

// NewQStashScheduleV2 registers a new resource with the given unique name, arguments, and options.
func NewQStashScheduleV2(ctx *pulumi.Context,
	name string, args *QStashScheduleV2Args, opts ...pulumi.ResourceOption) (*QStashScheduleV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cron == nil {
		return nil, errors.New("invalid value for required argument 'Cron'")
	}
	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource QStashScheduleV2
	err := ctx.RegisterResource("upstash:index/qStashScheduleV2:QStashScheduleV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQStashScheduleV2 gets an existing QStashScheduleV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQStashScheduleV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QStashScheduleV2State, opts ...pulumi.ResourceOption) (*QStashScheduleV2, error) {
	var resource QStashScheduleV2
	err := ctx.ReadResource("upstash:index/qStashScheduleV2:QStashScheduleV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QStashScheduleV2 resources.
type qstashScheduleV2State struct {
	// Body to send for the POST request in string format. Needs escaping (\) double quotes.
	Body *string `pulumi:"body"`
	// Callback URL for Qstash Schedule.
	Callback *string `pulumi:"callback"`
	// Content type for Qstash Scheduling.
	ContentType *string `pulumi:"contentType"`
	// Creation time for Qstash Schedule.
	CreatedAt *int `pulumi:"createdAt"`
	// Cron string for Qstash Schedule
	Cron *string `pulumi:"cron"`
	// Delay for Qstash Schedule. Delay should be given in seconds
	Delay *string `pulumi:"delay"`
	// Destination for Qstash Schedule. Either Topic Name or valid URL
	Destination *string `pulumi:"destination"`
	// Forward headers to your API
	ForwardHeaders map[string]string `pulumi:"forwardHeaders"`
	// Headers for the QStash schedule
	Header *string `pulumi:"header"`
	// Method of Http Request on QStash
	Method *string `pulumi:"method"`
	// Retries for Qstash Schedule requests.
	Retries *int `pulumi:"retries"`
	// Unique Qstash Schedule ID for requested schedule
	ScheduleId *string `pulumi:"scheduleId"`
}

type QStashScheduleV2State struct {
	// Body to send for the POST request in string format. Needs escaping (\) double quotes.
	Body pulumi.StringPtrInput
	// Callback URL for Qstash Schedule.
	Callback pulumi.StringPtrInput
	// Content type for Qstash Scheduling.
	ContentType pulumi.StringPtrInput
	// Creation time for Qstash Schedule.
	CreatedAt pulumi.IntPtrInput
	// Cron string for Qstash Schedule
	Cron pulumi.StringPtrInput
	// Delay for Qstash Schedule. Delay should be given in seconds
	Delay pulumi.StringPtrInput
	// Destination for Qstash Schedule. Either Topic Name or valid URL
	Destination pulumi.StringPtrInput
	// Forward headers to your API
	ForwardHeaders pulumi.StringMapInput
	// Headers for the QStash schedule
	Header pulumi.StringPtrInput
	// Method of Http Request on QStash
	Method pulumi.StringPtrInput
	// Retries for Qstash Schedule requests.
	Retries pulumi.IntPtrInput
	// Unique Qstash Schedule ID for requested schedule
	ScheduleId pulumi.StringPtrInput
}

func (QStashScheduleV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*qstashScheduleV2State)(nil)).Elem()
}

type qstashScheduleV2Args struct {
	// Body to send for the POST request in string format. Needs escaping (\) double quotes.
	Body *string `pulumi:"body"`
	// Callback URL for Qstash Schedule.
	Callback *string `pulumi:"callback"`
	// Content type for Qstash Scheduling.
	ContentType *string `pulumi:"contentType"`
	// Cron string for Qstash Schedule
	Cron string `pulumi:"cron"`
	// Delay for Qstash Schedule. Delay should be given in seconds
	Delay *string `pulumi:"delay"`
	// Destination for Qstash Schedule. Either Topic Name or valid URL
	Destination string `pulumi:"destination"`
	// Forward headers to your API
	ForwardHeaders map[string]string `pulumi:"forwardHeaders"`
	// Method of Http Request on QStash
	Method *string `pulumi:"method"`
	// Retries for Qstash Schedule requests.
	Retries *int `pulumi:"retries"`
}

// The set of arguments for constructing a QStashScheduleV2 resource.
type QStashScheduleV2Args struct {
	// Body to send for the POST request in string format. Needs escaping (\) double quotes.
	Body pulumi.StringPtrInput
	// Callback URL for Qstash Schedule.
	Callback pulumi.StringPtrInput
	// Content type for Qstash Scheduling.
	ContentType pulumi.StringPtrInput
	// Cron string for Qstash Schedule
	Cron pulumi.StringInput
	// Delay for Qstash Schedule. Delay should be given in seconds
	Delay pulumi.StringPtrInput
	// Destination for Qstash Schedule. Either Topic Name or valid URL
	Destination pulumi.StringInput
	// Forward headers to your API
	ForwardHeaders pulumi.StringMapInput
	// Method of Http Request on QStash
	Method pulumi.StringPtrInput
	// Retries for Qstash Schedule requests.
	Retries pulumi.IntPtrInput
}

func (QStashScheduleV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*qstashScheduleV2Args)(nil)).Elem()
}

type QStashScheduleV2Input interface {
	pulumi.Input

	ToQStashScheduleV2Output() QStashScheduleV2Output
	ToQStashScheduleV2OutputWithContext(ctx context.Context) QStashScheduleV2Output
}

func (*QStashScheduleV2) ElementType() reflect.Type {
	return reflect.TypeOf((**QStashScheduleV2)(nil)).Elem()
}

func (i *QStashScheduleV2) ToQStashScheduleV2Output() QStashScheduleV2Output {
	return i.ToQStashScheduleV2OutputWithContext(context.Background())
}

func (i *QStashScheduleV2) ToQStashScheduleV2OutputWithContext(ctx context.Context) QStashScheduleV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(QStashScheduleV2Output)
}

// QStashScheduleV2ArrayInput is an input type that accepts QStashScheduleV2Array and QStashScheduleV2ArrayOutput values.
// You can construct a concrete instance of `QStashScheduleV2ArrayInput` via:
//
//	QStashScheduleV2Array{ QStashScheduleV2Args{...} }
type QStashScheduleV2ArrayInput interface {
	pulumi.Input

	ToQStashScheduleV2ArrayOutput() QStashScheduleV2ArrayOutput
	ToQStashScheduleV2ArrayOutputWithContext(context.Context) QStashScheduleV2ArrayOutput
}

type QStashScheduleV2Array []QStashScheduleV2Input

func (QStashScheduleV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QStashScheduleV2)(nil)).Elem()
}

func (i QStashScheduleV2Array) ToQStashScheduleV2ArrayOutput() QStashScheduleV2ArrayOutput {
	return i.ToQStashScheduleV2ArrayOutputWithContext(context.Background())
}

func (i QStashScheduleV2Array) ToQStashScheduleV2ArrayOutputWithContext(ctx context.Context) QStashScheduleV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QStashScheduleV2ArrayOutput)
}

// QStashScheduleV2MapInput is an input type that accepts QStashScheduleV2Map and QStashScheduleV2MapOutput values.
// You can construct a concrete instance of `QStashScheduleV2MapInput` via:
//
//	QStashScheduleV2Map{ "key": QStashScheduleV2Args{...} }
type QStashScheduleV2MapInput interface {
	pulumi.Input

	ToQStashScheduleV2MapOutput() QStashScheduleV2MapOutput
	ToQStashScheduleV2MapOutputWithContext(context.Context) QStashScheduleV2MapOutput
}

type QStashScheduleV2Map map[string]QStashScheduleV2Input

func (QStashScheduleV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QStashScheduleV2)(nil)).Elem()
}

func (i QStashScheduleV2Map) ToQStashScheduleV2MapOutput() QStashScheduleV2MapOutput {
	return i.ToQStashScheduleV2MapOutputWithContext(context.Background())
}

func (i QStashScheduleV2Map) ToQStashScheduleV2MapOutputWithContext(ctx context.Context) QStashScheduleV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QStashScheduleV2MapOutput)
}

type QStashScheduleV2Output struct{ *pulumi.OutputState }

func (QStashScheduleV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**QStashScheduleV2)(nil)).Elem()
}

func (o QStashScheduleV2Output) ToQStashScheduleV2Output() QStashScheduleV2Output {
	return o
}

func (o QStashScheduleV2Output) ToQStashScheduleV2OutputWithContext(ctx context.Context) QStashScheduleV2Output {
	return o
}

// Body to send for the POST request in string format. Needs escaping (\) double quotes.
func (o QStashScheduleV2Output) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringPtrOutput { return v.Body }).(pulumi.StringPtrOutput)
}

// Callback URL for Qstash Schedule.
func (o QStashScheduleV2Output) Callback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringPtrOutput { return v.Callback }).(pulumi.StringPtrOutput)
}

// Content type for Qstash Scheduling.
func (o QStashScheduleV2Output) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringPtrOutput { return v.ContentType }).(pulumi.StringPtrOutput)
}

// Creation time for Qstash Schedule.
func (o QStashScheduleV2Output) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Cron string for Qstash Schedule
func (o QStashScheduleV2Output) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringOutput { return v.Cron }).(pulumi.StringOutput)
}

// Delay for Qstash Schedule. Delay should be given in seconds
func (o QStashScheduleV2Output) Delay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringPtrOutput { return v.Delay }).(pulumi.StringPtrOutput)
}

// Destination for Qstash Schedule. Either Topic Name or valid URL
func (o QStashScheduleV2Output) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

// Forward headers to your API
func (o QStashScheduleV2Output) ForwardHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringMapOutput { return v.ForwardHeaders }).(pulumi.StringMapOutput)
}

// Headers for the QStash schedule
func (o QStashScheduleV2Output) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Method of Http Request on QStash
func (o QStashScheduleV2Output) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringPtrOutput { return v.Method }).(pulumi.StringPtrOutput)
}

// Retries for Qstash Schedule requests.
func (o QStashScheduleV2Output) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.IntPtrOutput { return v.Retries }).(pulumi.IntPtrOutput)
}

// Unique Qstash Schedule ID for requested schedule
func (o QStashScheduleV2Output) ScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v *QStashScheduleV2) pulumi.StringOutput { return v.ScheduleId }).(pulumi.StringOutput)
}

type QStashScheduleV2ArrayOutput struct{ *pulumi.OutputState }

func (QStashScheduleV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QStashScheduleV2)(nil)).Elem()
}

func (o QStashScheduleV2ArrayOutput) ToQStashScheduleV2ArrayOutput() QStashScheduleV2ArrayOutput {
	return o
}

func (o QStashScheduleV2ArrayOutput) ToQStashScheduleV2ArrayOutputWithContext(ctx context.Context) QStashScheduleV2ArrayOutput {
	return o
}

func (o QStashScheduleV2ArrayOutput) Index(i pulumi.IntInput) QStashScheduleV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QStashScheduleV2 {
		return vs[0].([]*QStashScheduleV2)[vs[1].(int)]
	}).(QStashScheduleV2Output)
}

type QStashScheduleV2MapOutput struct{ *pulumi.OutputState }

func (QStashScheduleV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QStashScheduleV2)(nil)).Elem()
}

func (o QStashScheduleV2MapOutput) ToQStashScheduleV2MapOutput() QStashScheduleV2MapOutput {
	return o
}

func (o QStashScheduleV2MapOutput) ToQStashScheduleV2MapOutputWithContext(ctx context.Context) QStashScheduleV2MapOutput {
	return o
}

func (o QStashScheduleV2MapOutput) MapIndex(k pulumi.StringInput) QStashScheduleV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QStashScheduleV2 {
		return vs[0].(map[string]*QStashScheduleV2)[vs[1].(string)]
	}).(QStashScheduleV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QStashScheduleV2Input)(nil)).Elem(), &QStashScheduleV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*QStashScheduleV2ArrayInput)(nil)).Elem(), QStashScheduleV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*QStashScheduleV2MapInput)(nil)).Elem(), QStashScheduleV2Map{})
	pulumi.RegisterOutputType(QStashScheduleV2Output{})
	pulumi.RegisterOutputType(QStashScheduleV2ArrayOutput{})
	pulumi.RegisterOutputType(QStashScheduleV2MapOutput{})
}
