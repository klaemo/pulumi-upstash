// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upstash

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupQStashTopic(ctx *pulumi.Context, args *LookupQStashTopicArgs, opts ...pulumi.InvokeOption) (*LookupQStashTopicResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupQStashTopicResult
	err := ctx.Invoke("upstash:index/getQStashTopic:getQStashTopic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQStashTopic.
type LookupQStashTopicArgs struct {
	TopicId string `pulumi:"topicId"`
}

// A collection of values returned by getQStashTopic.
type LookupQStashTopicResult struct {
	Endpoints []map[string]string `pulumi:"endpoints"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Name    string `pulumi:"name"`
	TopicId string `pulumi:"topicId"`
}

func LookupQStashTopicOutput(ctx *pulumi.Context, args LookupQStashTopicOutputArgs, opts ...pulumi.InvokeOption) LookupQStashTopicResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQStashTopicResult, error) {
			args := v.(LookupQStashTopicArgs)
			r, err := LookupQStashTopic(ctx, &args, opts...)
			var s LookupQStashTopicResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQStashTopicResultOutput)
}

// A collection of arguments for invoking getQStashTopic.
type LookupQStashTopicOutputArgs struct {
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (LookupQStashTopicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQStashTopicArgs)(nil)).Elem()
}

// A collection of values returned by getQStashTopic.
type LookupQStashTopicResultOutput struct{ *pulumi.OutputState }

func (LookupQStashTopicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQStashTopicResult)(nil)).Elem()
}

func (o LookupQStashTopicResultOutput) ToLookupQStashTopicResultOutput() LookupQStashTopicResultOutput {
	return o
}

func (o LookupQStashTopicResultOutput) ToLookupQStashTopicResultOutputWithContext(ctx context.Context) LookupQStashTopicResultOutput {
	return o
}

func (o LookupQStashTopicResultOutput) Endpoints() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v LookupQStashTopicResult) []map[string]string { return v.Endpoints }).(pulumi.StringMapArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQStashTopicResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQStashTopicResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupQStashTopicResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQStashTopicResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupQStashTopicResultOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQStashTopicResult) string { return v.TopicId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQStashTopicResultOutput{})
}
