// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upstash

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVectorIndex(ctx *pulumi.Context, args *LookupVectorIndexArgs, opts ...pulumi.InvokeOption) (*LookupVectorIndexResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupVectorIndexResult
	err := ctx.Invoke("upstash:index/getVectorIndex:getVectorIndex", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVectorIndex.
type LookupVectorIndexArgs struct {
	Id string `pulumi:"id"`
}

// A collection of values returned by getVectorIndex.
type LookupVectorIndexResult struct {
	CreationTime         int     `pulumi:"creationTime"`
	CustomerId           string  `pulumi:"customerId"`
	DimensionCount       int     `pulumi:"dimensionCount"`
	Endpoint             string  `pulumi:"endpoint"`
	Id                   string  `pulumi:"id"`
	MaxDailyQueries      int     `pulumi:"maxDailyQueries"`
	MaxDailyUpdates      int     `pulumi:"maxDailyUpdates"`
	MaxMonthlyBandwidth  int     `pulumi:"maxMonthlyBandwidth"`
	MaxQueryPerSecond    int     `pulumi:"maxQueryPerSecond"`
	MaxReadsPerRequest   int     `pulumi:"maxReadsPerRequest"`
	MaxTotalMetadataSize int     `pulumi:"maxTotalMetadataSize"`
	MaxVectorCount       int     `pulumi:"maxVectorCount"`
	MaxWritesPerRequest  int     `pulumi:"maxWritesPerRequest"`
	MaxWritesPerSecond   int     `pulumi:"maxWritesPerSecond"`
	Name                 string  `pulumi:"name"`
	ReadOnlyToken        string  `pulumi:"readOnlyToken"`
	Region               string  `pulumi:"region"`
	ReservedPrice        float64 `pulumi:"reservedPrice"`
	SimilarityFunction   string  `pulumi:"similarityFunction"`
	Token                string  `pulumi:"token"`
	Type                 string  `pulumi:"type"`
}

func LookupVectorIndexOutput(ctx *pulumi.Context, args LookupVectorIndexOutputArgs, opts ...pulumi.InvokeOption) LookupVectorIndexResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVectorIndexResult, error) {
			args := v.(LookupVectorIndexArgs)
			r, err := LookupVectorIndex(ctx, &args, opts...)
			var s LookupVectorIndexResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVectorIndexResultOutput)
}

// A collection of arguments for invoking getVectorIndex.
type LookupVectorIndexOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupVectorIndexOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVectorIndexArgs)(nil)).Elem()
}

// A collection of values returned by getVectorIndex.
type LookupVectorIndexResultOutput struct{ *pulumi.OutputState }

func (LookupVectorIndexResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVectorIndexResult)(nil)).Elem()
}

func (o LookupVectorIndexResultOutput) ToLookupVectorIndexResultOutput() LookupVectorIndexResultOutput {
	return o
}

func (o LookupVectorIndexResultOutput) ToLookupVectorIndexResultOutputWithContext(ctx context.Context) LookupVectorIndexResultOutput {
	return o
}

func (o LookupVectorIndexResultOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.CreationTime }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) CustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.CustomerId }).(pulumi.StringOutput)
}

func (o LookupVectorIndexResultOutput) DimensionCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.DimensionCount }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o LookupVectorIndexResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVectorIndexResultOutput) MaxDailyQueries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxDailyQueries }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) MaxDailyUpdates() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxDailyUpdates }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) MaxMonthlyBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxMonthlyBandwidth }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) MaxQueryPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxQueryPerSecond }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) MaxReadsPerRequest() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxReadsPerRequest }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) MaxTotalMetadataSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxTotalMetadataSize }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) MaxVectorCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxVectorCount }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) MaxWritesPerRequest() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxWritesPerRequest }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) MaxWritesPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) int { return v.MaxWritesPerSecond }).(pulumi.IntOutput)
}

func (o LookupVectorIndexResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVectorIndexResultOutput) ReadOnlyToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.ReadOnlyToken }).(pulumi.StringOutput)
}

func (o LookupVectorIndexResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupVectorIndexResultOutput) ReservedPrice() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVectorIndexResult) float64 { return v.ReservedPrice }).(pulumi.Float64Output)
}

func (o LookupVectorIndexResultOutput) SimilarityFunction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.SimilarityFunction }).(pulumi.StringOutput)
}

func (o LookupVectorIndexResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.Token }).(pulumi.StringOutput)
}

func (o LookupVectorIndexResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVectorIndexResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVectorIndexResultOutput{})
}
